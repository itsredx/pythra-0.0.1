You are my senior systems engineer. You have full context of my entire Pythra framework codebase, including the reconciler, widgets, and data structures. I want you to implement a new indexed diffing strategy in the reconciler to optimize performance.

Here is what I want specifically:

    Implement global indexed diffing by html_id, so that instead of traversing the entire tree or child lists, the reconciler looks up changes directly for only the affected widget IDs.

    Maintain a global rendered_registry hashmap, mapping html_id to:

        key

        props hash

        widget instance

        other relevant data

    Optimize reconcile and _diff_node_recursive methods to:

        Skip diffing subtrees if props have not changed.

        Only issue patches for widgets whose props or children changed.

    Ensure compatibility with my existing Key-based logic to preserve widget identity comparisons.

    Provide the final full implementation of the updated reconciler code, clean, optimized, and fully integrated into my existing structure. Include any necessary utility functions or structural changes to support the new strategy.

    Ensure your code is well-structured, with clear comments explaining new data structures and logic changes for my review.

Be direct, efficient, and implement as a top-tier systems engineer would.